// Generated by funapi_initiator
// This file is an example to illustrate how to use protobuf
// client-server messages on Funapi.
// You can edit this file to meet your taste.


// You should use a relative path to the system top-level directory.
// On Linux, it's /usr/include.
// To import /usr/include/funapi/network/fun_messages.proto,
// use relative path like this:
import "funapi/network/fun_message.proto";


message UserState {
  required int32 user_id = 1;
  required float a_v = 2;
  required float a_h = 3;
  required float p_x = 4;
  required float p_z = 5;
  required float r_y = 6;
  required float r_w = 7;
  optional bool jump = 8;
}


message InputUpdate {
  required float a_v = 1;
  required float a_h = 2;
  required float p_x = 3;
  required float p_z = 4;
  required float r_y = 5;
  required float r_w = 6;
  optional bool jump = 7;
}


message Spawn {
  required int32 user_id = 1;
  required float a_v = 2;
  required float a_h = 3;
  required float p_x = 4;
  required float p_z = 5;
  required float r_y = 6;
  required float r_w = 7;
}


message SpawnSelf {
  required Spawn me = 1;
  repeated UserState others = 2;
}


message Killed {
  required int32 user_id = 1;
}


message UserUpdate {
  repeated UserState users = 1;
}


message ChangeFace {
  required string clip = 1;
  required int32 layer = 2;
}


message FaceUpdate {
  required int32 user_id = 1;
  required string clip = 2;
  required int32 layer = 3;
}


extend FunMessage {
  // 서버 -> 클라이언트
  optional SpawnSelf sc_spawn_self = 16;   // 연결된 직후에 받는 메시지
  optional Spawn sc_spawn_other = 17;  // 다른 유저가 연결되면 받는 메시지
  optional UserUpdate sc_update = 18;  // 모든 유저의 현재 상태 전달
  optional Killed sc_killed = 19;      // 유저 연결이 끊어지면 처리
  optional FaceUpdate sc_face = 20;    // 표정 변경 브로드캐스트

  // 클라이언트 -> 서버
  optional InputUpdate cs_input = 31;  // 입력 변경
  optional ChangeFace cs_face = 32;    // 표정 변경
}
